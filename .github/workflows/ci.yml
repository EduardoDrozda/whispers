name: Deploy API PRD

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

permissions:
  actions: read
  contents: read

jobs:
  build:
    name: Build Step
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install deps
        run: npm ci

      - name: Build affected projects
        run: |
          echo "ðŸ“¦ Build Projects"
          npx nx affected --base=HEAD~1 --head=HEAD --parallel --maxParallel=4 -t build

  tests:
    name: Test Step
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install deps
        run: npm ci

      - name: Run tests
        run: |
          echo "ðŸ§ª Test Projects"
          # npx nx affected --base=HEAD~1 --head=HEAD -t test

  get-affected-apps:
    name: Get affected apps
    needs:
      - build
      - tests
    runs-on: ubuntu-latest
    outputs:
      whispers_api_changed: ${{ steps.set.outputs.whispers_api_changed }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Detect changed apps
        id: set
        run: |
          affected=$(npx nx show projects --affected --base=HEAD~1 --head=HEAD)
          echo "âœ… Apps afetados:"
          echo "$affected"

          [[ "$affected" == *"whispers.api"* ]] && echo "whispers_api_changed=true" >> $GITHUB_OUTPUT || echo "whispers_api_changed=false" >> $GITHUB_OUTPUT

  deploy-prd:
    name: Deploy whispers.api
    needs:
      - get-affected-apps
    if: github.ref == 'refs/heads/main' && needs.get-affected-apps.outputs.whispers_api_changed == 'true'
    runs-on: ubuntu-latest
    environment: prd
    env:
      IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/whispers-api:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install deps
        run: npm ci

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Setup GCP
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: Build & Push Docker image
        run: gcloud builds submit --config cloudbuild.yaml

      - name: Deploy API to Cloud Run
        run: |
          echo "ðŸš€ Deploy whispers.api"
          gcloud run deploy whispers-api \
            --image $IMAGE_NAME \
            --region ${{ secrets.GCP_REGION }} \
            --memory 128Mi --min-instances 0 --max-instances 2 \
            --platform managed \
            --port ${{ secrets.PORT }} \
            --allow-unauthenticated \
            --set-env-vars=NODE_ENV=${{ secrets.NODE_ENV }},DATABASE_URL=${{ secrets.DATABASE_URL }},DIRECT_URL=${{ secrets.DIRECT_URL }},JWT_SECRET=${{ secrets.JWT_SECRET }},JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}
